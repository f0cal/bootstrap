name: f0cal.bootstrap.dev

formulas:

  - name: all
    descr: "[init, clone, env]"
    config:
      master: False
      minion: False
    template: |
      salt-call
        --local \
        --retcode-passthrough \
        state.sls _orch.all \
        saltenv={{ saltbox.formula.saltenv }} \
        pillar='{{ {"cli": saltbox.cli} | tojson() }}'
    saltenv: f0cal.bootstrap.dev
    args:
      - name: code_dir
        type: "__import__('os').path.abspath"
      - name: ["-u", "--git-url"]

  - name: init
    descr: "Clones the project.yml at {code_dir}"
    config:
      master: False
      minion: False
    template: |
      salt-call
        --local \
        --retcode-passthrough \
        state.sls _states.project \
        saltenv={{ saltbox.formula.saltenv }} \
        pillar='{{ {"cli": saltbox.cli} | tojson() }}'
    saltenv: f0cal.bootstrap.dev
    args:
      - name: code_dir
        type: "__import__('os').path.abspath"
      - name: ["-u", "--git-url"]

  - name: clone
    descr: "Walks on project.yml and populates the project sources accordingly"
    config:
      master: False
      minion: False
    template: |
      salt-call
        --local \
        --retcode-passthrough \
        state.sls _states.clone \
        saltenv={{ saltbox.formula.saltenv }} \
        pillar='{{ {"cli": saltbox.cli} | tojson() }}'
    saltenv: f0cal.bootstrap.dev
    args:
      - name: code_dir
        type: "__import__('os').path.abspath"
      - name: ["-u", "--git-url"]

  - name: git
    descr: "Walks on project.yml and branches all repos"
    config:
      master: False
      minion: False
    template: |
      salt-call
        --local \
        --retcode-passthrough \
        state.sls _states.git \
        saltenv={{ saltbox.formula.saltenv }} \
        pillar='{{ {"cli": saltbox.cli} | tojson() }}'
    saltenv: f0cal.bootstrap.dev
    args:
      - name: code_dir
        type: "__import__('os').path.abspath"
      - name: git_args
        nargs: "..." # This is == argparse.REMAINDER
        type: "__import__('shlex').quote"

  - name: env
    descr: "Walks on project.yml and populates the build environment"
    config:
      master: False
      minion: False
    template: |
      salt-call
        --local \
        --retcode-passthrough \
        state.sls _states.env \
        saltenv={{ saltbox.formula.saltenv }} \
        pillar='{{ {"cli": saltbox.cli} | tojson() }}'
    saltenv: f0cal.bootstrap.dev
    args:
      - name: code_dir
        type: "__import__('os').path.abspath"
      - name: ["-e", "--env"]
        default: dev

  # - name: status
  #   config:
  #     master: False
  #     minion: False
  #   template: |
  #     salt-call
  #       --local \
  #       state.sls _states.status \
  #       saltenv={{ saltbox.formula.saltenv }} \
  #       pillar='{{ {"cli": saltbox.cli} | tojson() }}'
  #   saltenv: f0cal.bootstrap.dev
  #   args:
  #     - name: code_dir
  #       type: "__import__('os').path.abspath"
  #     - name: ["-u", "--git-url"]

  # - name: test
  #   config:
  #     master: False
  #     minion: False
  #   template: |
  #     salt-call
  #       --local \
  #       state.sls _states.test \
  #       saltenv={{ saltbox.formula.saltenv }} \
  #       pillar='{{ {"cli": saltbox.cli} | tojson() }}'
  #   saltenv: f0cal.bootstrap.dev
  #   args:
  #     - name: code_dir
  #       type: "__import__('os').path.abspath"
  #     - name: ["-i", "--integration-tests"]
  #       default: False

  - name: push
    descr: "Push all branches; update project.yml with commit hashes; push project.yml"
    config:
      master: False
      minion: False
    template: |
      salt-call
        --local \
        state.sls _states.push \
        saltenv={{ saltbox.formula.saltenv }} \
        pillar='{{ {"cli": saltbox.cli} | tojson() }}'
    saltenv: f0cal.bootstrap.dev
    args:
      - name: code_dir
        type: "__import__('os').path.abspath"
